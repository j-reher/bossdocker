name: Deploy .tar.gz files

on: push
  # push:
  #   branches:
  #   - main
  #   paths:
  #   - 'Dockerfile'
  #   - '*/Dockerfile'
  #   - '.github/workflows/deploy-image.yml'

jobs:
  list-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Convert version list to Matrix
      id: set-matrix 
      run: echo "::set-output name=matrix::$(cat versions.txt | jq -R -s -c 'split("\n")[:-1]')"

  process-version:
    needs: list-versions
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash-outputs.outputs.hash }}
    strategy:
      matrix:
        bossversion: ${{ fromJson(needs.list-versions.outputs.matrix) }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Make Dummies
      run: |
        mkdir -p /home/runner/out
        cd /home/runner/out
        echo "If this is the problem I'm mad." >> cmthome-${{ matrix.bossversion }}.tar.gz
        echo "If this is the problem I'm mad." >> cvmfs-cache-${{ matrix.bossversion }}.tar.gz
        echo "If this is the problem I'm mad." >> TestRelease-${{ matrix.bossversion }}.tar.gz
        pwd
        ls -l /home/runner/out
    - name: Get hash of output files
      id: hash-outputs
      run: |
        echo "Test: ${{ hashFiles('/home/runner/**') }}"
        echo "::set-output hash-#{{ matrix.bossversion }}=${{ hashFiles('/home/runner/**') }}" 
    - name: Upload tar files
      uses: actions/upload-artifact@v3
      with:
        name: tarfiles-${{ matrix.bossversion }}
        path: /home/runner/out/*.tar.gz

  deploy-version:
    needs: [process-version, list-versions]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bossversion: ${{ fromJson(needs.list-versions.outputs.matrix) }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Make Restore dir
      run: mkdir -p /home/runner/out
    - name: Restore tar files
      uses: actions/download-artifact@v3
      with:
        name: tarfiles-${{ matrix.bossversion }}
        path: /home/runner/out
    - name: Check restore success
      run: ls -l /home/runner/out
    - name: Upload cmthome files
      uses: nogsantos/scp-deploy@master
      with:
        src: /home/runner/out/cmthome-${{ matrix.bossversion }}.tar.gz
        host: ${{ secrets.SSH_HOST }}
        remote: ~/cmthome-${{ matrix.bossversion }}.tar.gz
        port: ${{ secrets.SSH_PORT }}
        user: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
    - name: Upload TestRelease files
      uses: nogsantos/scp-deploy@master
      with:
        src: /home/runner/out/TestRelease-${{ matrix.bossversion }}.tar.gz
        host: ${{ secrets.SSH_HOST }}
        remote: ${{ secrets.SSH_DIR }}/testrelease/
        port: ${{ secrets.SSH_PORT }}
        user: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
    - name: Upload cvmfs-cache files
      uses: nogsantos/scp-deploy@master
      with:
        src: /home/runner/out/cvmfs-cache-${{ matrix.bossversion }}.tar.gz
        host: ${{ secrets.SSH_HOST }}
        remote: ${{ secrets.SSH_DIR }}/cache/
        port: ${{ secrets.SSH_PORT }}
        user: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
    
  cleanup:
    needs: [list-versions, deploy-version]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bossversion: ${{ fromJson(needs.list-versions.outputs.matrix) }}
    steps:
      - name: Write small dummies to replace artifacts
        run: |
          mkdir -p /home/runner/out
          touch /home/runner/out/cmthome-${{ matrix.bossversion }}.tar.gz
          touch /home/runner/out/testrelease-${{ matrix.bossversion }}.tar.gz
          touch /home/runner/out/cvmfs-cache-${{ matrix.bossversion }}.tar.gz
      - name: Upload dummies
        uses: actions/upload-artifact@v3
        with:
          name: tarfiles-${{ matrix.bossversion }}
          path: /home/runner/out/*.tar.gz
          retention-days: 1
