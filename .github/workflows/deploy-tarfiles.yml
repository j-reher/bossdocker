name: Deploy .tar.gz files

on: push
  # push:
  #   branches:
  #   - main
  #   paths:
  #   - 'Dockerfile'
  #   - '*/Dockerfile'
  #   - '.github/workflows/deploy-image.yml'

jobs:
  list-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Convert version list to Matrix
      id: set-matrix
      run: echo "::set-output name=matrix::$(cat versions.txt | jq -R -s -c 'split("\n")[:-1]')"

  process-version:
    needs: list-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bossversion: ${{ fromJson(needs.list-versions.outputs.matrix) }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Make Dummies
      run: |
        mkdir out
        touch cmthome-${{ matrix.bossversion }}.tar.gz
        touch cvmfs-cache-${{ matrix.bossversion }}.tar.gz
        touch TestRelease-${{ matrix.bossversion }}.tar.gz
        echo ${{ matrix.bossversion }}
    - name: Cache tar files
      uses: actions/cache@v2
      with:
        path: ~/out
        key: bosscache-tars-${{ matrix.bossversion }}

  deploy-version:
    needs: [process-version, list-versions]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bossversion: ${{ fromJson(needs.list-versions.outputs.matrix) }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Restore Cached tar files
      uses: actions/cache@v2
      with:
        path: ~/out
        key: bosscache-tars-${{ matrix.bossversion }}
    - name: List contents
      run: ls -l ~/out