name: Deploy all versions

on:
  workflow_run:
    workflows: |
      Deploy .tar.gz files
      Deploy Image -- Latest
    types:
      - completed
  workflow_dispatch:
    inputs:
      deploy-all:
        type: boolean
        required: false
        default: false
        description: Remake all images instead of only the missing ones.

env:
  DEPLOY_ALL: ${{ ( github.event_name == 'workflow_run' && github.event.workflow == 'Deploy Image -- Latest' ) || ( github.event_name == 'workflow_dispatch' && github.event.inputs.deploy-all == 'true' ) }}

jobs:
  echo-caller:
    runs-on: ubuntu-latest
    steps:
    - name: Version 1
      if: ${{ env.DEPLOY_ALL == 'true' }}
      run: |
        echo "Version 1 worked."
  
  list-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Stage missing versions for upload
      if: ${{ env.DEPLOY_ALL == 'false' }}
      run: |
        echo "This will go through versions and list the missing ones in a new file 'versions_processed.txt'"
        while IFS="" read -r p || [ -n "$p" ]
        do
          if [ curl --silent -f -lSL https://index.docker.io/v1/repositories/jreher/boss/tags/$p >> /dev/null ] ; then
            echo "Staging version $p for upload."
            echo "$p" >> versions_processed.txt
          fi
        done <versions.txt
    - name: Stage all versions for upload
      if: ${{ env.DEPLOY_ALL == 'true' }}
      run: |
        cp versions.txt versions_processed.txt
    - name: Turn new list into output for matrix
      id: set-matrix
      run: |
        echo "::set-output name=matrix::$(cat versions_processed.txt | jq -R -s -c 'split("\n")[:-1]')"
    - name: Check matrix output
      run: |
        echo "${{ steps.set-matrix.outputs.matrix }}"