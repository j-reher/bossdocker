name: Lint, build and test

on:
  pull_request:
    branches:
    - main
    paths:
    - 'Dockerfile'
    - 'bossdocker/Dockerfile'
    - 'bossdocker-base/Dockerfile'
    - 'bossdocker-installboss/Dockerfile'
    - 'bossdocker-installboss-cache/Dockerfile'
    - '.github/workflows/test-image.yml'
  push:
    branches:
    - main
    paths:
    - "Dockerfile"
    - 'bossdocker/Dockerfile'
    - 'bossdocker-base/Dockerfile'
    - 'bossdocker-installboss/Dockerfile'
    - 'bossdocker-installboss-cache/Dockerfile'
    - '.github/workflows/test-image.yml'

jobs:
  lint-bossdocker-dockerfile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Lint Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'bossdocker/Dockerfile'

  lint-base-dockerfile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Lint Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'bossdocker-base/Dockerfile'

  lint-install-dockerfile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Lint Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'bossdocker-installboss/Dockerfile'

  lint-cache-dockerfile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Lint Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'bossdocker-installboss-cache/Dockerfile'
  
  lint-shellscripts:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: azohra/shell-linter@latest
      with:
        path: "scripts/*.sh"
  
  build-and-test:
    needs: [lint-bossdocker-dockerfile, lint-base-dockerfile, lint-cache-dockerfile, lint-cache-dockerfile]
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: network=host
    - name: Build base and push to local registry
      uses: docker/build-push-action@v3
      with:
        context: bossdocker-base
        push: true
        tags: localhost:5000/jreher/boss:utils-base
    - name: Build main and push to local registry
      uses: docker/build-push-action@v3
      with:
        context: bossdocker
        push: true
        tags: localhost:5000/jreher/boss:latest
    - name: Build install and push to local registry
      uses: docker/build-push-action@v3
      with:
        context: bossdocker
        push: true
        tags: localhost:5000/jreher/boss:utils-install
    - name: Build cache and push to local registry
      uses: docker/build-push-action@v3
      with:
        context: bossdocker
        push: true
        tags: localhost:5000/jreher/boss:utils-cache

    - name: Test sim, reco and ana with boss.exe 
      uses: addnab/docker-run-action@v3
      with:
        image: localhost:5000/jreher/boss:latest
        options: --security-opt label=disable --workdir /root/workarea --privileged
        run: |
          source /root/mount.sh
          source /root/setup.sh
          cd /root/workarea/TestRelease/*/run
          boss.exe jobOptions_sim.txt
          boss.exe jobOptions_rec.txt
          boss.exe jobOptions_ana_rhopi.txt
    - name: Test compiling with cmt
      uses: addnab/docker-run-action@v3
      with:
        image: localhost:5000/jreher/boss:latest
        options: --security-opt label=disable --workdir /root/workarea --privileged
        run: |
          source /root/mount.sh
          source /root/setup.sh
          cd /root/workarea/TestRelease/*/cmt
          cmt clean
          cmt config
          cmt make