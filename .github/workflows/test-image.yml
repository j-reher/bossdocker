name: Lint, build and test

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Lint Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'Dockerfile'
  
  lint-shellscripts:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: azohra/shell-linter@latest
      with:
        path: "scripts/*.sh"
  
  build-and-test:
    needs: [lint-dockerfile, lint-shellscripts]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag bossdocker:latest
    - name: Test sim, reco and ana with boss.exe 
      uses: addnab/docker-run-action@v3
      with:
        image: bossdocker:latest
        options: --security-opt label=disable --workdir /root/workarea --privileged
        run: |
          source /root/mount.sh
          source /root/setup.sh
          cd /root/workarea/TestRelease/*/run
          boss.exe jobOptions_sim.txt
          boss.exe jobOptions_rec.txt
          boss.exe jobOptions_ana_rhopi.txt
    - name: Test compiling with cmt
      uses: addnab/docker-run-action@v3
      with:
        image: bossdocker:latest
        options: --security-opt label=disable --workdir /root/workarea --privileged
        run: |
          source /root/mount.sh
          source /root/setup.sh
          cd /root/workarea/TestRelease/*/cmt
          cmt clean
          cmt config
          cmt make

  build-and-test-scripts:
    needs: [lint-dockerfile, lint-shellscripts]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Echo Test Info
      run: |
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag boss:latest
    - name: Test shell scripts
      run: |
        mkdir ${{ github.workspace }}/workarea/Yapp
        cd ${{ github.workspace }}/workarea/Yapp
        ${{ github.workspace }}/scripts/initboss.sh
        cd ${{ github.workspace }}/workarea/TestRelease/TestRelease*/cmt
        ${{ github.workspace }}/scripts/cmt.sh clean
        ${{ github.workspace }}/scripts/cmt.sh config
        ${{ github.workspace }}/scripts/cmt.sh make
        cd ${{ github.workspace }}/workareak/TestRelease/TestRelease*/run
        ${{ github.workspace }}/scripts/boss.exe.sh ./jobOptions_sim.txt
        ${{ github.workspace }}/scripts/stopboss.sh